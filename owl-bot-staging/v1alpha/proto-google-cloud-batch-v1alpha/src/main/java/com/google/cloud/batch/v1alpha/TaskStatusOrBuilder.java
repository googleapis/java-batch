// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/batch/v1alpha/task.proto

package com.google.cloud.batch.v1alpha;

public interface TaskStatusOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.batch.v1alpha.TaskStatus)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Task state
   * </pre>
   *
   * <code>.google.cloud.batch.v1alpha.TaskStatus.State state = 1;</code>
   * @return The enum numeric value on the wire for state.
   */
  int getStateValue();
  /**
   * <pre>
   * Task state
   * </pre>
   *
   * <code>.google.cloud.batch.v1alpha.TaskStatus.State state = 1;</code>
   * @return The state.
   */
  com.google.cloud.batch.v1alpha.TaskStatus.State getState();

  /**
   * <pre>
   * Detailed info about why the state is reached.
   * </pre>
   *
   * <code>repeated .google.cloud.batch.v1alpha.StatusEvent status_events = 2;</code>
   */
  java.util.List<com.google.cloud.batch.v1alpha.StatusEvent> 
      getStatusEventsList();
  /**
   * <pre>
   * Detailed info about why the state is reached.
   * </pre>
   *
   * <code>repeated .google.cloud.batch.v1alpha.StatusEvent status_events = 2;</code>
   */
  com.google.cloud.batch.v1alpha.StatusEvent getStatusEvents(int index);
  /**
   * <pre>
   * Detailed info about why the state is reached.
   * </pre>
   *
   * <code>repeated .google.cloud.batch.v1alpha.StatusEvent status_events = 2;</code>
   */
  int getStatusEventsCount();
  /**
   * <pre>
   * Detailed info about why the state is reached.
   * </pre>
   *
   * <code>repeated .google.cloud.batch.v1alpha.StatusEvent status_events = 2;</code>
   */
  java.util.List<? extends com.google.cloud.batch.v1alpha.StatusEventOrBuilder> 
      getStatusEventsOrBuilderList();
  /**
   * <pre>
   * Detailed info about why the state is reached.
   * </pre>
   *
   * <code>repeated .google.cloud.batch.v1alpha.StatusEvent status_events = 2;</code>
   */
  com.google.cloud.batch.v1alpha.StatusEventOrBuilder getStatusEventsOrBuilder(
      int index);
}
