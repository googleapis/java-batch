// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/batch/v1/task.proto

package com.google.cloud.batch.v1;

public interface RunnableOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.batch.v1.Runnable)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Container runnable.
   * </pre>
   *
   * <code>.google.cloud.batch.v1.Runnable.Container container = 1;</code>
   * @return Whether the container field is set.
   */
  boolean hasContainer();
  /**
   * <pre>
   * Container runnable.
   * </pre>
   *
   * <code>.google.cloud.batch.v1.Runnable.Container container = 1;</code>
   * @return The container.
   */
  com.google.cloud.batch.v1.Runnable.Container getContainer();
  /**
   * <pre>
   * Container runnable.
   * </pre>
   *
   * <code>.google.cloud.batch.v1.Runnable.Container container = 1;</code>
   */
  com.google.cloud.batch.v1.Runnable.ContainerOrBuilder getContainerOrBuilder();

  /**
   * <pre>
   * Script runnable.
   * </pre>
   *
   * <code>.google.cloud.batch.v1.Runnable.Script script = 2;</code>
   * @return Whether the script field is set.
   */
  boolean hasScript();
  /**
   * <pre>
   * Script runnable.
   * </pre>
   *
   * <code>.google.cloud.batch.v1.Runnable.Script script = 2;</code>
   * @return The script.
   */
  com.google.cloud.batch.v1.Runnable.Script getScript();
  /**
   * <pre>
   * Script runnable.
   * </pre>
   *
   * <code>.google.cloud.batch.v1.Runnable.Script script = 2;</code>
   */
  com.google.cloud.batch.v1.Runnable.ScriptOrBuilder getScriptOrBuilder();

  /**
   * <pre>
   * Barrier runnable.
   * </pre>
   *
   * <code>.google.cloud.batch.v1.Runnable.Barrier barrier = 6;</code>
   * @return Whether the barrier field is set.
   */
  boolean hasBarrier();
  /**
   * <pre>
   * Barrier runnable.
   * </pre>
   *
   * <code>.google.cloud.batch.v1.Runnable.Barrier barrier = 6;</code>
   * @return The barrier.
   */
  com.google.cloud.batch.v1.Runnable.Barrier getBarrier();
  /**
   * <pre>
   * Barrier runnable.
   * </pre>
   *
   * <code>.google.cloud.batch.v1.Runnable.Barrier barrier = 6;</code>
   */
  com.google.cloud.batch.v1.Runnable.BarrierOrBuilder getBarrierOrBuilder();

  /**
   * <pre>
   * Normally, a non-zero exit status causes the Task to fail. This flag allows
   * execution of other Runnables to continue instead.
   * </pre>
   *
   * <code>bool ignore_exit_status = 3;</code>
   * @return The ignoreExitStatus.
   */
  boolean getIgnoreExitStatus();

  /**
   * <pre>
   * This flag allows a Runnable to continue running in the background while the
   * Task executes subsequent Runnables. This is useful to provide services to
   * other Runnables (or to provide debugging support tools like SSH servers).
   * </pre>
   *
   * <code>bool background = 4;</code>
   * @return The background.
   */
  boolean getBackground();

  /**
   * <pre>
   * By default, after a Runnable fails, no further Runnable are executed. This
   * flag indicates that this Runnable must be run even if the Task has already
   * failed. This is useful for Runnables that copy output files off of the VM
   * or for debugging.
   * The always_run flag does not override the Task's overall max_run_duration.
   * If the max_run_duration has expired then no further Runnables will execute,
   * not even always_run Runnables.
   * </pre>
   *
   * <code>bool always_run = 5;</code>
   * @return The alwaysRun.
   */
  boolean getAlwaysRun();

  public com.google.cloud.batch.v1.Runnable.ExecutableCase getExecutableCase();
}
