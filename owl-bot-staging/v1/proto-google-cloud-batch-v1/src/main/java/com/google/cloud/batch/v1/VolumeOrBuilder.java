// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/batch/v1/volume.proto

package com.google.cloud.batch.v1;

public interface VolumeOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.batch.v1.Volume)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * An NFS source for the volume (could be a Filestore, for example).
   * </pre>
   *
   * <code>.google.cloud.batch.v1.NFS nfs = 1;</code>
   * @return Whether the nfs field is set.
   */
  boolean hasNfs();
  /**
   * <pre>
   * An NFS source for the volume (could be a Filestore, for example).
   * </pre>
   *
   * <code>.google.cloud.batch.v1.NFS nfs = 1;</code>
   * @return The nfs.
   */
  com.google.cloud.batch.v1.NFS getNfs();
  /**
   * <pre>
   * An NFS source for the volume (could be a Filestore, for example).
   * </pre>
   *
   * <code>.google.cloud.batch.v1.NFS nfs = 1;</code>
   */
  com.google.cloud.batch.v1.NFSOrBuilder getNfsOrBuilder();

  /**
   * <pre>
   * A Google Cloud Storage source for the volume.
   * </pre>
   *
   * <code>.google.cloud.batch.v1.GCS gcs = 3;</code>
   * @return Whether the gcs field is set.
   */
  boolean hasGcs();
  /**
   * <pre>
   * A Google Cloud Storage source for the volume.
   * </pre>
   *
   * <code>.google.cloud.batch.v1.GCS gcs = 3;</code>
   * @return The gcs.
   */
  com.google.cloud.batch.v1.GCS getGcs();
  /**
   * <pre>
   * A Google Cloud Storage source for the volume.
   * </pre>
   *
   * <code>.google.cloud.batch.v1.GCS gcs = 3;</code>
   */
  com.google.cloud.batch.v1.GCSOrBuilder getGcsOrBuilder();

  /**
   * <pre>
   * Device name of an attached disk
   * </pre>
   *
   * <code>string device_name = 6;</code>
   * @return Whether the deviceName field is set.
   */
  boolean hasDeviceName();
  /**
   * <pre>
   * Device name of an attached disk
   * </pre>
   *
   * <code>string device_name = 6;</code>
   * @return The deviceName.
   */
  java.lang.String getDeviceName();
  /**
   * <pre>
   * Device name of an attached disk
   * </pre>
   *
   * <code>string device_name = 6;</code>
   * @return The bytes for deviceName.
   */
  com.google.protobuf.ByteString
      getDeviceNameBytes();

  /**
   * <pre>
   * Mount path for the volume, e.g. /mnt/share
   * </pre>
   *
   * <code>string mount_path = 4;</code>
   * @return The mountPath.
   */
  java.lang.String getMountPath();
  /**
   * <pre>
   * Mount path for the volume, e.g. /mnt/share
   * </pre>
   *
   * <code>string mount_path = 4;</code>
   * @return The bytes for mountPath.
   */
  com.google.protobuf.ByteString
      getMountPathBytes();

  /**
   * <pre>
   * Mount options
   * For Google Cloud Storage, mount options are the global options supported by
   * gcsfuse tool. Batch will use them to mount the volume with the following
   * command:
   * "gcsfuse [global options] bucket mountpoint".
   * For PD, NFS, mount options are these supported by /etc/fstab. Batch will
   * use Fstab to mount such volumes.
   * https://help.ubuntu.com/community/Fstab
   * </pre>
   *
   * <code>repeated string mount_options = 5;</code>
   * @return A list containing the mountOptions.
   */
  java.util.List<java.lang.String>
      getMountOptionsList();
  /**
   * <pre>
   * Mount options
   * For Google Cloud Storage, mount options are the global options supported by
   * gcsfuse tool. Batch will use them to mount the volume with the following
   * command:
   * "gcsfuse [global options] bucket mountpoint".
   * For PD, NFS, mount options are these supported by /etc/fstab. Batch will
   * use Fstab to mount such volumes.
   * https://help.ubuntu.com/community/Fstab
   * </pre>
   *
   * <code>repeated string mount_options = 5;</code>
   * @return The count of mountOptions.
   */
  int getMountOptionsCount();
  /**
   * <pre>
   * Mount options
   * For Google Cloud Storage, mount options are the global options supported by
   * gcsfuse tool. Batch will use them to mount the volume with the following
   * command:
   * "gcsfuse [global options] bucket mountpoint".
   * For PD, NFS, mount options are these supported by /etc/fstab. Batch will
   * use Fstab to mount such volumes.
   * https://help.ubuntu.com/community/Fstab
   * </pre>
   *
   * <code>repeated string mount_options = 5;</code>
   * @param index The index of the element to return.
   * @return The mountOptions at the given index.
   */
  java.lang.String getMountOptions(int index);
  /**
   * <pre>
   * Mount options
   * For Google Cloud Storage, mount options are the global options supported by
   * gcsfuse tool. Batch will use them to mount the volume with the following
   * command:
   * "gcsfuse [global options] bucket mountpoint".
   * For PD, NFS, mount options are these supported by /etc/fstab. Batch will
   * use Fstab to mount such volumes.
   * https://help.ubuntu.com/community/Fstab
   * </pre>
   *
   * <code>repeated string mount_options = 5;</code>
   * @param index The index of the value to return.
   * @return The bytes of the mountOptions at the given index.
   */
  com.google.protobuf.ByteString
      getMountOptionsBytes(int index);

  public com.google.cloud.batch.v1.Volume.SourceCase getSourceCase();
}
